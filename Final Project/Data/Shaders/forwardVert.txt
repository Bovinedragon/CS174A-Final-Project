#version 140

in vec3 vPosition0;
in vec3 vNormal0;
in vec2 vTexCoord0;

in vec3 vPosition1;
in vec3 vNormal1;
in vec2 vTexCoord1;

out vec3 normal;
out vec3 tangent;
out vec3 binormal;
out vec4 position;
out vec2 texCoord;

uniform bool b_animatedGeometry;
uniform float attributeLerp;

uniform mat4 projectionMatrix;
uniform mat4 modelviewMatrix;

void main() { 

	if (b_animatedGeometry) {
		texCoord = mix(vTexCoord0, vTexCoord1, attributeLerp);	
		normal = (modelviewMatrix * vec4(mix(vNormal0, vNormal1, attributeLerp), 0.0f)).xyz;
		position = modelviewMatrix * vec4(mix(vPosition0, vPosition1, attributeLerp), 1.0f);
	}	
	else {
		texCoord = vTexCoord0;	
		normal = (modelviewMatrix * vec4(vNormal0, 0.0f)).xyz;
		position = modelviewMatrix * vec4(vPosition0, 1.0f);
	}

    gl_Position = projectionMatrix * position; 
	
	tangent = cross(normal, vec3(0.0, 0.0, 1.0)); 

	if(length(tangent) < 0.01f)
		tangent = cross(normal, vec3(1.0, 0.0, 0.0));	

	binormal = cross(normal, tangent); 
}